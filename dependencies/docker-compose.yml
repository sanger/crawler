version: "3.3"
services:
  # A MySQL service as close to production as currently possible
  # To run it as a standalone container:
  #   docker run --name mysql-5.7 -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d -p 3306:3306 mysql:5.7
  mysql-5.7:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - mysql-volume:/var/lib/mysql

  # A MongoDB service as close to production as currently possible
  # To run it as a standalone container:
  #   docker run --name mongo -d -p 27017:27017 mongo:4.2
  mongo-4.2:
    image: mongo:4.2
    ports:
      - "27017:27017"
    volumes:
      - mongo-volume:/data/db

  # A MS SQL Server service as close to production as currently possible
  # To run it as a standalone container:
  #   docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=MyS3cr3tPassw0rd' -p 1433:1433 -d --name mssql mcr.microsoft.com/mssql/server:2017-latest
  mssql-2017:
    image: mcr.microsoft.com/mssql/server:2017-latest
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: MyS3cr3tPassw0rd
    volumes:
      - mssql-volume:/var/opt/mssql

  # An SFTP server for hosting unit test files
  # To run it as a standalone container:
  #   docker run -p "3010:22" -v ${PWD}/test:/home/foo -d atmoz/sftp foo:pass:1001
  sftp_server:
    image: atmoz/sftp
    volumes:
      - ../test:/home/foo
    command: foo:pass:1001
    networks:
      - external

  # An instance of RedPanda Schema Registry
  # To run it as a standalone container:
  #   docker network create redpanda-network
  #   docker volume create redpanda-volume
  #   docker run --name=schema_registry --net=redpanda-network -v "redpanda-volume:/var/lib/redpanda/data" -p 8081:8081 \
  #     docker.vectorized.io/vectorized/redpanda start --overprovisioned --smp 1 --memory 250M
  schema_registry:
    image: docker.vectorized.io/vectorized/redpanda
    networks:
      - redpanda-network
    ports:
      - "8081:8081"
    volumes:
      - redpanda-volume:/var/lib/redpanda/data
    mem_limit: 250m
    command:
      - start
      - --overprovisioned
      - --smp 1
      - --memory 250M

  rabbitmq:
    image: rabbitmq:3-management
    hostname: heron-rabbitmq
    ports:
      - "5672:5672"
      - "8080:15672"
    configs:
      - source: rabbitmq-conf
        target: /etc/rabbitmq/rabbitmq.conf

configs:
  rabbitmq-conf:
    file: ./rabbitmq.conf

volumes:
  mongo-volume:
  mysql-volume:
  mssql-volume:
  redpanda-volume:

networks:
  external:
  redpanda-network:
