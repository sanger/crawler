name: Automated build, test, release and push

on:
  push:
    branches:
      - develop
      - master

env:
  IMAGE_NAME: ${{ github.repository }}/${{ github.event.repository.name }}

jobs:
  build_test_release_push:
    runs-on: ubuntu-18.04
    services:
      mongodb:
        image: mongo:4.2.5
        ports:
          - 27017:27017

      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: unified_warehouse_test
    steps:
      - uses: actions/checkout@v2

      - uses: nelonoel/branch-name@v1.0.1

      - name: Build and tag the image for testing and release
        run: >-
          docker build .
          --file Dockerfile
          --tag docker.pkg.github.com/${IMAGE_NAME}:${BRANCH_NAME}

      - name: Create mysql test warehouse database and table
        run: >-
          docker run
          --network host
          --entrypoint ''
          docker.pkg.github.com/${IMAGE_NAME}:${BRANCH_NAME}
          python setup_test_db.py

      - name: Run tests against the image
        run: >-
          docker run
          --network host
          --entrypoint ''
          docker.pkg.github.com/${IMAGE_NAME}:${BRANCH_NAME}
          python -m pytest --no-cov -vx

      - name: Set release tag
        # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
        run: echo "RELEASE_VERSION=$(printf '%s.%s%s\n' $(cat .release-version) ${GITHUB_RUN_ID} $([ ${BRANCH_NAME} = "develop" ] && echo "-develop" || echo ""))" >> $GITHUB_ENV

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_VERSION }}
          tag_name: v${{ env.RELEASE_VERSION }}
          prerelease: ${{ !(github.ref == 'refs/heads/master') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to registry
        run: >-
          docker login
          -u ${{ github.actor }}
          -p ${{ secrets.GITHUB_TOKEN }}
          docker.pkg.github.com

      - name: Tag image with release version
        run: >-
          docker tag
          docker.pkg.github.com/${IMAGE_NAME}:${BRANCH_NAME}
          docker.pkg.github.com/${IMAGE_NAME}:${{ env.RELEASE_VERSION }}

      - name: Push release tag image to registry
        run: >-
          docker push docker.pkg.github.com/${IMAGE_NAME}:${{ env.RELEASE_VERSION }}

      - name: Remove the oldest package
        uses: actions/delete-package-versions@v1
        with:
          package-name: "${{ github.event.repository.name }}"
