name: Python - check format, lint and type check

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  black:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Install dependencies
        run: |
          pipenv sync --dev --system

      - name: Check format with black
        run: |
          # stop the build if there are black formatting errors
          python -m black --check .

  flake8:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Install dependencies
        run: |
          pipenv sync --dev --system

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8

  mypy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Install dependencies
        run: |
          pipenv sync --dev --system

      - name: Run mypy
        run: |
          python -m mypy .
